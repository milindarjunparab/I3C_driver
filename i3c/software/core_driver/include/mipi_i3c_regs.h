/* parasoft-begin-suppress MISRA2012-RULE-1_1_a_c99-2 "C99 - limits, DRV-4754" parasoft-begin-suppress MISRA2012-RULE-1_1_a_c90-2 "C90 - limits, DRV-4754" */
/* parasoft-begin-suppress item MISRA2012-DIR-4_8 "Consider hiding implementation of structure, DRV-3667" */

/*(C) 2023 Cadence Design Systems, Inc. 
This file is licensed under the Cadence Public License Version 1.0 (the “License”), a copy of which is available at https://www.cadence.com/content/dam/cadence-www/global/en_US/documents/terms-and-conditions/Cadence-Public-License-Version-1.0.pdf, and is distributed "AS IS." TO THE  MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, CADENCE DISCLAIMS ALL WARRANTIES AND IN NO EVENT SHALL BE LIABLE TO ANY PARTY FOR ANY DAMAGES ARISING OUT OF OR RELATING TO USE OF THIS FILE. Please see the License for the full text of applicable terms.
*
*
* THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT
*
**********************************************************************/

#ifndef REG_MIPI_I3C_REGS_H_
#define REG_MIPI_I3C_REGS_H_

#include <cps_drv.h>

#include "mipi_i3c_regs_macros.h"
#ifdef __cplusplus
extern "C" {
#endif

typedef struct __attribute__((packed)) MIPI_I3cRegs_s {
    volatile uint32_t DEV_ID;
    volatile uint32_t CONF_STATUS0;
    volatile uint32_t CONF_STATUS1;
    volatile char pad__0[0x4U];
    volatile uint32_t CTRL;
    volatile uint32_t PRESCL_CTRL0;
    volatile uint32_t PRESCL_CTRL1;
    volatile uint32_t SLV_STATUS4;
    volatile uint32_t MST_IER;
    volatile uint32_t MST_IDR;
    volatile uint32_t MST_IMR;
    volatile uint32_t MST_ICR;
    volatile uint32_t MST_ISR;
    volatile uint32_t MST_STATUS0;
    volatile uint32_t CMDR;
    volatile uint32_t IBIR;
    volatile uint32_t SLV_IER;
    volatile uint32_t SLV_IDR;
    volatile uint32_t SLV_IMR;
    volatile uint32_t SLV_ICR;
    volatile uint32_t SLV_ISR;
    volatile uint32_t SLV_STATUS0;
    volatile uint32_t SLV_STATUS1;
    volatile uint32_t SLV_IBI_CTRL;
    volatile uint32_t CMD0_FIFO;
    volatile uint32_t CMD1_FIFO;
    volatile uint32_t TX_FIFO;
    volatile uint32_t TX_FIFO_STATUS;
    volatile uint32_t IMD_CMD0;
    volatile uint32_t IMD_CMD1;
    volatile uint32_t IMD_DATA;
    volatile uint32_t RX_FIFO_STATUS;
    volatile uint32_t RX_FIFO;
    volatile uint32_t IBI_DATA_FIFO;
    volatile uint32_t SLV_DDR_TX_FIFO;
    volatile uint32_t SLV_DDR_RX_FIFO;
    volatile uint32_t CMD_IBI_THR_CTRL;
    volatile uint32_t TX_RX_THR_CTRL;
    volatile uint32_t SLV_DDR_TX_RX_THR_CTRL;
    volatile uint32_t FLUSH_CTRL;
    volatile uint32_t SLV_CTRL;
    volatile uint32_t SLV_PROTOCOL_ERROR_TYPE;
    volatile uint32_t SLV_STATUS2;
    volatile uint32_t SLV_STATUS3;
    volatile uint32_t TTO_PRESCL_CTRL0;
    volatile uint32_t TTO_PRESCL_CTRL1;
    volatile uint32_t DEVS_CTRL;
    volatile char pad__1[0x4U];
    volatile uint32_t DEV_ID0_RR0;
    volatile uint32_t DEV_ID0_RR1;
    volatile uint32_t DEV_ID0_RR2;
    volatile char pad__2[0x4U];
    volatile uint32_t DEV_ID1_RR0;
    volatile uint32_t DEV_ID1_RR1;
    volatile uint32_t DEV_ID1_RR2;
    volatile char pad__3[0x4U];
    volatile uint32_t DEV_ID2_RR0;
    volatile uint32_t DEV_ID2_RR1;
    volatile uint32_t DEV_ID2_RR2;
    volatile char pad__4[0x4U];
    volatile uint32_t DEV_ID3_RR0;
    volatile uint32_t DEV_ID3_RR1;
    volatile uint32_t DEV_ID3_RR2;
    volatile char pad__5[0x4U];
    volatile uint32_t DEV_ID4_RR0;
    volatile uint32_t DEV_ID4_RR1;
    volatile uint32_t DEV_ID4_RR2;
    volatile char pad__6[0x4U];
    volatile uint32_t DEV_ID5_RR0;
    volatile uint32_t DEV_ID5_RR1;
    volatile uint32_t DEV_ID5_RR2;
    volatile char pad__7[0x4U];
    volatile uint32_t DEV_ID6_RR0;
    volatile uint32_t DEV_ID6_RR1;
    volatile uint32_t DEV_ID6_RR2;
    volatile char pad__8[0x4U];
    volatile uint32_t DEV_ID7_RR0;
    volatile uint32_t DEV_ID7_RR1;
    volatile uint32_t DEV_ID7_RR2;
    volatile char pad__9[0x4U];
    volatile uint32_t DEV_ID8_RR0;
    volatile uint32_t DEV_ID8_RR1;
    volatile uint32_t DEV_ID8_RR2;
    volatile char pad__10[0x4U];
    volatile uint32_t DEV_ID9_RR0;
    volatile uint32_t DEV_ID9_RR1;
    volatile uint32_t DEV_ID9_RR2;
    volatile char pad__11[0x4U];
    volatile uint32_t DEV_ID10_RR0;
    volatile uint32_t DEV_ID10_RR1;
    volatile uint32_t DEV_ID10_RR2;
    volatile char pad__12[0x4U];
    volatile uint32_t DEV_ID11_RR0;
    volatile uint32_t DEV_ID11_RR1;
    volatile uint32_t DEV_ID11_RR2;
    volatile char pad__13[0x4U];
    volatile uint32_t SIR_MAP0;
    volatile uint32_t SIR_MAP1;
    volatile uint32_t SIR_MAP2;
    volatile uint32_t SIR_MAP3;
    volatile uint32_t SIR_MAP4;
    volatile uint32_t SIR_MAP5;
    volatile uint32_t GRPADDR_LIST;
    volatile uint32_t GRPADDR_CS;
    volatile uint32_t GPIR_WORD0;
    volatile char pad__14[0x7CU];
    volatile uint32_t GPOR_WORD0;
    volatile char pad__15[0xDCU];
    volatile uint32_t asf_int_status;
    volatile uint32_t asf_int_raw_status;
    volatile uint32_t asf_int_mask;
    volatile uint32_t asf_int_test;
    volatile uint32_t asf_fatal_nonfatal_select;
    volatile char pad__16[0xCU];
    volatile uint32_t asf_sram_corr_fault_status;
    volatile uint32_t asf_sram_uncorr_fault_status;
    volatile uint32_t asf_sram_fault_stats;
    volatile char pad__17[0x4U];
    volatile uint32_t asf_trans_to_ctrl;
    volatile uint32_t asf_trans_to_fault_mask;
    volatile uint32_t asf_trans_to_fault_status;
    volatile char pad__18[0x4U];
    volatile uint32_t asf_protocol_fault_mask;
    volatile uint32_t asf_protocol_fault_status;
} MIPI_I3cRegs;

#ifdef __cplusplus
}
#endif

#endif /* REG_MIPI_I3C_REGS_H_ */

/* parasoft-end-suppress MISRA2012-RULE-1_1_a_c99-2 "C99 - limits, DRV-4754" */
/* parasoft-end-suppress MISRA2012-RULE-1_1_a_c90-2 "C90 - limits, DRV-4754" */
/* parasoft-end-suppress MISRA2012-DIR-4_8 "Consider hiding implementation of structure, DRV-3667" */

