/******************************************************************************
 *
 * Copyright (C) 2012-2023 Cadence Design Systems, Inc.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the copyright holder nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 ******************************************************************************/
#ifndef DEVICE_DEFINITIONS_H
#define DEVICE_DEFINITIONS_H

#include <stdlib.h>
#include <cdn_stdtypes.h>
#include <cdn_log.h>
#include "i3c_if.h"
#include "map_system_memory.h"

/*******************************************************************/
/* WARNING !!!  This slave definition is for one, and only one     */
/*         configuration of i3c csp.  Configuration name is        */
/*                   "platform_config_robust_003"                  */
/*******************************************************************/

/************************************************************/
/* This file sould be autogenerated but currently it is not */
/************************************************************/

/*********************************/
/* We can support only 5 devices */
/*********************************/

#define MASTER 0
#define SEC_MASTER_0 1
#define SEC_MASTER_1 2
#define SLAVE_0 3
#define SLAVE_1 4

typedef enum {
    I3C_ROLE_MASTER = (0),
    I3C_ROLE_SECONDAY_MASTER = (1),
    I3C_ROLE_SLAVE = (2),
    I2C_ROLE_SLAVE = (3),
} fn_test_i3c_role;

typedef struct {
    I3C_PrivData* private_data;
    uint8_t static_address;
    uint8_t dynamic_address;
    uint8_t has_static_address;
    uint64_t pid;
    fn_test_i3c_role role;
    uint8_t is_active;
    uint8_t is_legacy_i2c_device;
    uint8_t is_i2c_10b_addr;
    uint8_t is_i2c_fm_plus;
    uint8_t has_apb;
    uint32_t registers_base;
    uint8_t hdr_capable;
    uint8_t ibi_capable;
} fn_test_i3c_device;


extern fn_test_i3c_device master_0_primary;
extern fn_test_i3c_device master_1_secondary;
extern fn_test_i3c_device master_2_secondary;
extern fn_test_i3c_device slave_0;
extern fn_test_i3c_device slave_1;
extern fn_test_i3c_device slave_2;
extern fn_test_i3c_device i2c_slave;
extern fn_test_i3c_device i2c_slave_fm;
/* extern int number_of_primary_masters; */
/* extern int number_of_secondary_masters; */
/* extern fn_test_i3c_device secondary_masters []; */

/* extern int number_of_slaves; */
/* extern fn_test_i3c_device slaves []; */

extern fn_test_i3c_device* all_test_devices[];
extern int number_of_all_test_devices;

#endif /* DEVICE_DEFINITIONS_H */
